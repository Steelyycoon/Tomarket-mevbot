"""
A user of web3.storage.
"""
type User {
  name: String!
  picture: String
  email: String!
  issuer: String! @unique

  """
  GitHub user handle, may be null if user logged in via email.
  """
  github: String

  """
  Cryptographic public address of the Magic User.
  """
  publicAddress: String!

  """
  User authentification keys.
  """
  keys: [AuthKey!]! @relation

  created: Time!
}

"""
API authentication keys.
"""
type AuthKey {
  """
  User assigned name.
  """
  name: String!

  """
  Secret that corresponds to this key.
  """
  secret: String!

  """
  Uploads made using this key.
  """
  uploads: [Upload!]! @relation @index

  """
  User this key belongs to.
  """
  user: User! @relation @index
}

"""
Details of the root of a file/directory stored on web3.storage.
"""
type Pin {
  """
  Root CID that corresponds to this pin.
  """
  cid: String! @unique

  """
  Deals referencing this pin.
  """
  deals: [Deal!]! @relation

  """
  Size of the DAG.
  """
  dagSize: Int!

  """
  Pinning status.
  """
  status: PinStatus!

  """
  Identifier for the known location where this pin is pinned.
  """
  location: String!
}

enum PinStatus {
  Undefined
  ClusterError
  PinError
  UnpinError
  Pinned
  Pinning
  Unpinned
  Remote
  PinQueued
  UnpinQueued
  Sharded
}

"""
An upload created by a user.
"""
type Upload {
  """
  User that uploaded this content.
  """
  user: User! @relation @index

  """
  User auth key that was used to upload this content.
  """
  authKey: AuthKey

  """
  Pin representing the root of the uploaded content.
  """
  pin: Pin! @relation

  created: Time!

  deleted: Time
}

"""
Filecoin deal for a pin.
"""
type Deal {
  """
  CIDs in this deal.
  """
  pins: [Pin!]! @relation @index

  """
  ID of miner this deal was made with.
  """
  miner: String

  """
  Filecoin network deal is made on.
  """
  network: String

  """
  Piece CID.
  """
  pieceCid: String

  """
  CID of the root of the batch data.
  """
  batchRootCid: String

  """
  Identifier for the deal stored on chain.
  """
  chainDealId: Int

  """
  Selector for extracting stored data from the batch root.
  """
  dataModelSelector: String

  """
  Time when deal will be active.
  """
  activation: Time

  """
  Time when deal has expired and will renew.
  """
  renewal: Time

  """
  Current deal status.
  """
  status: DealStatus!

  """
  Human readable reason for the current status.
  """
  statusReason: String

  """
  Last time this deal was updated.
  """
  updated: Time!
}

enum DealStatus {
  Queued
  Proposing
  Accepted
  Failed
  Published
  Active
  Terminated
}

type Query {
  findUploads(where: FindUploadsInput): [Upload!]! @resolver(paginated: true)
  findPinByCid(cid: String!): Pin @resolver
  """
  Verify the User with the passed issuer owns the AuthKey with the passed secret.
  """
  verifyAuthKey(issuer: String!, secret: String!): AuthKey @resolver
}

type Mutation {
  createOrUpdateUser(input: CreateOrUpdateUserInput!): User! @resolver
  importCar(input: ImportCarInput!): Upload! @resolver
}

input FindUploadsInput {
  before: Time!
}

input CreateOrUpdateUserInput {
  name: String!
  picture: String
  email: String!
  issuer: String!
  github: String
  publicAddress: String!
}

input ImportCarInput {
  user: ID!
  cid: String!
  dagSize: Int
}
