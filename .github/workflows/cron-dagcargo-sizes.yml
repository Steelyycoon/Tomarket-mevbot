name: Update Content DAG Sizes

on:
  schedule:
    - cron: '38 * * * *'
  workflow_dispatch:
    inputs:
      after:
        required: false
        description: Date used as a starting point for dag_sizes updates. This should be a string value specified in a format recognized by the Date.parse() method
        type: string
      before:
        required: false
        description: Date used as confine dag_sizes updates. This should be a string value specified in a format recognized by the Date.parse() method
        type: string

jobs:
  update:
    name: Populate Missing Content DAG Sizes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ['staging', 'production']
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Checkout latest cron release tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 --match='cron-*')
          git checkout $LATEST_TAG
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - uses: bahmutov/npm-install@v1
      - name: Run job
        env:
          DEBUG: '*'
          ENV: ${{ matrix.env }}
          STAGING_PG_CONNECTION: ${{ secrets.STAGING_PG_CONNECTION }}
          STAGING_RO_PG_CONNECTION: ${{ secrets.STAGING_PG_CONNECTION }} # no replica for staging
          PROD_PG_CONNECTION: ${{ secrets.PROD_PG_CONNECTION }}
          DAG_CARGO_HOST: ${{ secrets.DAG_CARGO_HOST }}
          DAG_CARGO_DATABASE: ${{ secrets.DAG_CARGO_DATABASE }}
          DAG_CARGO_USER: ${{ secrets.DAG_CARGO_USER }}
          DAG_CARGO_PASSWORD: ${{ secrets.DAG_CARGO_PASSWORD }}
          AFTER: ${{ github.event.inputs.after }}
          BEFORE: ${{ github.event.inputs.before }}
        run: npm run start:dagcargo:sizes -w packages/cron

      - name: Heartbeat
        if: ${{ success() }}
        run: ./packages/tools/scripts/cli.js heartbeat --token ${{ secrets.OPSGENIE_KEY }} --name cron-web3storage-dagcargo-sizes
